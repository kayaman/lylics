openapi: 3.0.0
info:
  version: 1.0.0
  title: Lylics API
  description: A sample API to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  # First authoritative one will get replaced by `SITE` + `BASE_URL` + `/api` env.
  - url: http://localhost:4321/api/v1
    description: Local server
  - url: https://lylics.magj.dev/api/v1
    description: Production server
paths:
  '/lylics':
    get:
      description: |
        Return a random lylic.
      operationId: randomLylic
      responses:
        '200':
          description: Lylic response
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lylic'
        default:
          description: unexpected error
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new Lylic.
      operationId: addLylic
      requestBody:
        description: Lylic to be added.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lylic'
      responses:
        '200':
          description: lylic response
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Lylic'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /lylics/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the person
      operationId: findPersonById
      parameters:
        - name: id
          in: path
          description: ID of person to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: person response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lylic'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: deletes a single Lylic based on the ID supplied
      operationId: deleteLylic
      parameters:
        - name: id
          in: path
          description: ID of Lylic to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: lylic deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Lylic:
      type: object
      required:
        - quote
        - artist
      properties:
        id:
          type: integer
          format: int64
        quote:
          type: string
        artist:
          type: string

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
